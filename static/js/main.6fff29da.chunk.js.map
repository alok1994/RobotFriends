{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","react_default","a","createElement","className","alt","src","concat","Cardlist","robot","robotArray","map","user","i","components_Card","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","target","value","_this2","fetch","Response","json","users","_this3","filterRobot","filter","toLowerCase","includes","toLocaleLowerCase","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_Cardlist","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.6fff29da.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Card = (props) =>{\r\n    const {name, email, id} = props\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt='robots' src={`https://robohash.org/${id}?200X200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Cardlist=({robot}) => {\r\n    const robotArray = robot.map((user , i) => {\r\n        return ( <Card \r\n            key={i} \r\n            id={robot[i].id}\r\n            name={robot[i].name} \r\n            email={robot[i].email}/>);\r\n    });\r\n    return (\r\n        <div>\r\n        {robotArray}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Cardlist","import React from \"react\";\r\n\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input\r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type='search'\r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px' }}>\r\n            { props.children }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        hasError : false\r\n    }\r\n}\r\ncomponentDidCatch(error, info){\r\n    this.setState({hasError: true })\r\n}\r\n    render(){\r\n        if (this.state.hasError){\r\n            return <h1> Oooooops. That is not good </h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from \"react\";\r\nimport Cardlist from \"../components/Cardlist\";\r\n//import { robot } from \"./robots\";\r\nimport SearchBox from '../components/SearchBox'\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robot: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(Response => Response.json())\r\n        .then(users => {this.setState({ robot: users})})\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({searchField: event.target.value})\r\n    } \r\n    render () {\r\n        const filterRobot = this.state.robot.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchField.toLocaleLowerCase())\r\n        })\r\n        if (this.state.robot.length === 0 ){\r\n            return <h1>Loading</h1>\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">RobotFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <Cardlist robot={filterRobot}/> \r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n// import Card from './Card'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n// import { robot } from './robots';\n// import Cardlist from './Cardlist'\nimport App from './containers/App'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}